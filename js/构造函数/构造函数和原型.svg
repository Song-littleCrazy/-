<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2407" height="3140" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 2407 3140"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M116.4999957755208,1704.49998331815A214,875,0,0,1,330.4999957755208,829.49998331815"></path><path id="kity_path_198" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M642.4999957755208,109.49998331815004C662.4999957755208,108.99998331815004,662.4999957755208,31.499983318150043,682.4999957755208,31.499983318150043"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M642.4999957755208,109.49998331815004C662.4999957755208,108.99998331815004,662.4999957755208,83.49998331815004,682.4999957755208,83.49998331815004"></path><path id="kity_path_200" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M642.4999957755208,109.49998331815004C662.4999957755208,108.99998331815004,662.4999957755208,135.49998331815004,682.4999957755208,135.49998331815004"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M642.4999957755208,109.49998331815004C662.4999957755208,108.99998331815004,662.4999957755208,187.49998331815004,682.4999957755208,187.49998331815004"></path><path id="kity_path_202" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,212.49998331815004C531.4999957755208,212.49998331815004,531.4999957755208,108.99998331815004,551.4999957755208,108.99998331815004"></path><path id="kity_path_203" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M653.4999957755208,317.49998331815004C673.4999957755208,316.99998331815004,673.4999957755208,239.49998331815004,693.4999957755208,239.49998331815004"></path><path id="kity_path_204" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M653.4999957755208,317.49998331815004C673.4999957755208,316.99998331815004,673.4999957755208,291.49998331815004,693.4999957755208,291.49998331815004"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M653.4999957755208,317.49998331815004C673.4999957755208,316.99998331815004,673.4999957755208,343.49998331815004,693.4999957755208,343.49998331815004"></path><path id="kity_path_206" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M653.4999957755208,317.49998331815004C673.4999957755208,316.99998331815004,673.4999957755208,395.49998331815004,693.4999957755208,395.49998331815004"></path><path id="kity_path_207" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,212.49998331815004C531.4999957755208,212.49998331815004,531.4999957755208,316.99998331815004,551.4999957755208,316.99998331815004"></path><path id="kity_path_208" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M402.4999957755208,829.49998331815C422.4999957755208,829.49998331815,422.4999957755208,212.49998331815004,442.4999957755208,212.49998331815004"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M402.4999957755208,829.49998331815C422.4999957755208,829.49998331815,422.4999957755208,1446.49998331815,442.4999957755208,1446.49998331815"></path><path id="kity_path_211" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C548.4999957755208,1446.49998331815,548.4999957755208,750.49998331815,585.4999957755208,750.49998331815"></path><path id="kity_path_299" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C531.9999957755208,1446.49998331815,531.9999957755208,464.49998331815004,552.4999957755208,464.49998331815004"></path><path id="kity_path_307" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C537.4999957755208,1446.49998331815,537.4999957755208,1445.49998331815,563.4999957755208,1445.49998331815"></path><path id="kity_path_355" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.4999957755208,1445.49998331815C652.4999957755208,1445.49998331815,652.4999957755208,1119.49998331815,672.4999957755208,1119.49998331815"></path><path id="kity_path_363" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M717.4999957755208,1119.49998331815C737.4999957755208,1119.49998331815,737.4999957755208,1020.49998331815,757.4999957755208,1020.49998331815"></path><path id="kity_path_385" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M717.4999957755208,1119.49998331815C737.4999957755208,1119.49998331815,737.4999957755208,1155.99998331815,757.4999957755208,1155.99998331815"></path><path id="kity_path_394" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M717.4999957755208,1119.49998331815C737.4999957755208,1119.49998331815,737.4999957755208,1255.49998331815,757.4999957755208,1255.49998331815"></path><path id="kity_path_402" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.4999957755208,1445.49998331815C657.9999957755208,1445.49998331815,657.9999957755208,1360.49998331815,683.4999957755208,1360.49998331815"></path><path id="kity_path_434" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.4999957755208,1445.49998331815C657.9999957755208,1445.49998331815,657.9999957755208,1536.49998331815,683.4999957755208,1536.49998331815"></path><path id="kity_path_515" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M632.4999957755208,1445.49998331815C655.9999957755208,1445.49998331815,655.9999957755208,1712.49998331815,679.4999957755208,1712.49998331815"></path><path id="kity_path_538" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M736.4999957755208,1712.49998331815C756.4999957755208,1712.49998331815,756.4999957755208,1686.49998331815,776.4999957755208,1686.49998331815"></path><path id="kity_path_539" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M736.4999957755208,1712.49998331815C756.4999957755208,1712.49998331815,756.4999957755208,1738.49998331815,776.4999957755208,1738.49998331815"></path><path id="kity_path_541" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C547.4999957755208,1446.49998331815,547.4999957755208,1812.49998331815,583.4999957755208,1812.49998331815"></path><path id="kity_path_565" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C541.4999957755208,1446.49998331815,541.4999957755208,1967.49998331815,571.4999957755208,1967.49998331815"></path><path id="kity_path_632" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M511.4999957755208,1446.49998331815C531.9999957755208,1446.49998331815,531.9999957755208,2161.49998331815,552.4999957755208,2161.49998331815"></path><path id="kity_path_1726" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M116.4999957755208,1704.49998331815A214,875,0,0,0,330.4999957755208,2579.49998331815"></path><path id="kity_path_1807" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M401.4999957755208,2579.49998331815C421.4999957755208,2579.49998331815,421.4999957755208,2313.49998331815,441.4999957755208,2313.49998331815"></path><path id="kity_path_1808" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,2633.49998331815C818.4999957755208,2633.49998331815,818.4999957755208,2446.49998331815,838.4999957755208,2446.49998331815"></path><path id="kity_path_1809" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,2633.49998331815C818.4999957755208,2633.49998331815,818.4999957755208,2633.49998331815,838.4999957755208,2633.49998331815"></path><path id="kity_path_1811" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,2633.49998331815C818.4999957755208,2633.49998331815,818.4999957755208,2820.99998331815,838.4999957755208,2820.99998331815"></path><path id="kity_path_1812" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M641.4999957755208,2845.49998331815C661.4999957755208,2845.49998331815,661.4999957755208,2633.49998331815,681.4999957755208,2633.49998331815"></path><path id="kity_path_1813" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M401.4999957755208,2579.49998331815C421.4999957755208,2579.49998331815,421.4999957755208,2845.49998331815,441.4999957755208,2845.49998331815"></path><path id="kity_path_1814" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M810.4999957755208,581.49998331815C830.4999957755208,581.49998331815,830.4999957755208,503.49998331815004,850.4999957755208,503.49998331815004"></path><path id="kity_path_1815" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M810.4999957755208,581.49998331815C830.4999957755208,581.49998331815,830.4999957755208,555.49998331815,850.4999957755208,555.49998331815"></path><path id="kity_path_1816" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M810.4999957755208,581.49998331815C830.4999957755208,581.49998331815,830.4999957755208,607.49998331815,850.4999957755208,607.49998331815"></path><path id="kity_path_1817" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M810.4999957755208,581.49998331815C830.4999957755208,581.49998331815,830.4999957755208,659.49998331815,850.4999957755208,659.49998331815"></path><path id="kity_path_1818" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M654.4999957755208,750.49998331815C674.4999957755208,750.49998331815,674.4999957755208,581.49998331815,694.4999957755208,581.49998331815"></path><path id="kity_path_1819" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,789.49998331815C818.4999957755208,789.49998331815,818.4999957755208,711.49998331815,838.4999957755208,711.49998331815"></path><path id="kity_path_1820" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,789.49998331815C818.4999957755208,789.49998331815,818.4999957755208,763.49998331815,838.4999957755208,763.49998331815"></path><path id="kity_path_1821" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,789.49998331815C818.4999957755208,789.49998331815,818.4999957755208,815.49998331815,838.4999957755208,815.49998331815"></path><path id="kity_path_1822" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M798.4999957755208,789.49998331815C818.4999957755208,789.49998331815,818.4999957755208,867.49998331815,838.4999957755208,867.49998331815"></path><path id="kity_path_1823" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M654.4999957755208,750.49998331815C674.4999957755208,750.49998331815,674.4999957755208,789.49998331815,694.4999957755208,789.49998331815"></path><path id="kity_path_1825" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M654.4999957755208,750.49998331815C674.4999957755208,750.49998331815,674.4999957755208,919.49998331815,694.4999957755208,919.49998331815"></path><path id="kity_path_1832" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M759.4999957755208,1812.49998331815C779.4999957755208,1812.49998331815,779.4999957755208,1786.49998331815,799.4999957755208,1786.49998331815"></path><path id="kity_path_1833" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M759.4999957755208,1812.49998331815C779.4999957755208,1812.49998331815,779.4999957755208,1838.49998331815,799.4999957755208,1838.49998331815"></path><path id="kity_path_1838" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.4999957755208,2161.49998331815C749.4999957755208,2161.49998331815,749.4999957755208,2109.49998331815,769.4999957755208,2109.49998331815"></path><path id="kity_path_1839" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.4999957755208,2161.49998331815C749.4999957755208,2161.49998331815,749.4999957755208,2161.49998331815,769.4999957755208,2161.49998331815"></path><path id="kity_path_1840" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.4999957755208,2161.49998331815C749.4999957755208,2161.49998331815,749.4999957755208,2213.49998331815,769.4999957755208,2213.49998331815"></path><path id="kity_path_1844" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M621.4999957755208,464.49998331815004C641.4999957755208,464.49998331815004,641.4999957755208,464.49998331815004,661.4999957755208,464.49998331815004"></path><path id="kity_path_1845" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M664.4999957755208,1967.49998331815C684.4999957755208,1967.49998331815,684.4999957755208,1887.49998331815,704.4999957755208,1887.49998331815"></path><path id="kity_path_1848" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M641.4999957755208,2845.49998331815C667.4999957755208,2845.49998331815,667.4999957755208,2951.49998331815,693.4999957755208,2951.49998331815"></path><path id="kity_path_1856" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M641.4999957755208,2845.49998331815C661.4999957755208,2845.49998331815,661.4999957755208,3057.49998331815,681.4999957755208,3057.49998331815"></path><path id="kity_path_1864" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M750.4999957755208,3057.49998331815C770.4999957755208,3057.49998331815,770.4999957755208,3005.49998331815,790.4999957755208,3005.49998331815"></path><path id="kity_path_1872" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M750.4999957755208,3057.49998331815C770.4999957755208,3057.49998331815,770.4999957755208,3057.49998331815,790.4999957755208,3057.49998331815"></path><path id="kity_path_1880" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M750.4999957755208,3057.49998331815C770.4999957755208,3057.49998331815,770.4999957755208,3109.49998331815,790.4999957755208,3109.49998331815"></path><path id="kity_path_1888" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M871.4999957755208,3005.49998331815C891.4999957755208,3005.49998331815,891.4999957755208,3005.49998331815,911.4999957755208,3005.49998331815"></path><path id="kity_path_1896" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M871.4999957755208,3057.49998331815C891.4999957755208,3057.49998331815,891.4999957755208,3057.49998331815,911.4999957755208,3057.49998331815"></path><path id="kity_path_1904" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M895.4999957755208,3109.49998331815C915.4999957755208,3109.49998331815,915.4999957755208,3109.49998331815,935.4999957755208,3109.49998331815"></path><path id="kity_path_1919" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M762.4999957755208,2951.49998331815C782.4999957755208,2951.49998331815,782.4999957755208,2951.49998331815,802.4999957755208,2951.49998331815"></path><path id="kity_path_1928" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M714.4999957755208,1360.49998331815C734.4999957755208,1360.49998331815,734.4999957755208,1308.49998331815,754.4999957755208,1308.49998331815"></path><path id="kity_path_1929" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M714.4999957755208,1360.49998331815C737.4999957755208,1360.49998331815,737.4999957755208,1359.49998331815,760.4999957755208,1359.49998331815"></path><path id="kity_path_1930" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M714.4999957755208,1360.49998331815C734.4999957755208,1360.49998331815,734.4999957755208,1412.49998331815,754.4999957755208,1412.49998331815"></path><path id="kity_path_1931" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1004.4999957755208,1536.49998331815C1024.4999957755208,1536.49998331815,1024.4999957755208,1475.49998331815,1044.4999957755208,1475.49998331815"></path><path id="kity_path_1932" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1417.4999957755208,1635.49998331815C1437.4999957755208,1635.49998331815,1437.4999957755208,1559.49998331815,1457.4999957755208,1559.49998331815"></path><path id="kity_path_1933" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1417.4999957755208,1635.49998331815C1438.4999957755208,1635.49998331815,1438.4999957755208,1670.49998331815,1459.4999957755208,1670.49998331815"></path><path id="kity_path_1934" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1004.4999957755208,1536.49998331815C1022.4999957755208,1536.49998331815,1022.4999957755208,1635.49998331815,1040.4999957755208,1635.49998331815"></path><path id="kity_path_1936" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M664.4999957755208,1967.49998331815C684.4999957755208,1967.49998331815,684.4999957755208,1993.49998331815,704.4999957755208,1993.49998331815"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M25.4999957755208,1684.49998331815h182a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-182a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="1694.0999832823873" x="44.4999957755208">面向对象的程序设计</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M705.4999957755208,1927.49998331815h594v15h-594z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M705.4999957755208,1942.49998331815L1299.4999957755208,1942.49998331815" stroke-width="1"></path></g><g id="minder_node3" opacity="1"><g id="node_expander2" style="cursor: pointer;"><path id="kity_path_44" fill="white" stroke="gray" d="M331.4999999627471,829.499970279634A6,6,0,1,1,319.4999999627471,829.499970279634A6,6,0,1,1,331.4999999627471,829.499970279634"></path><path id="kity_path_45" fill="none" stroke="gray" d="M320.9999999627471,829.499970279634L329.9999999627471,829.499970279634"></path></g><path id="node_outline3" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M335.50000036507845,816.499970279634h64a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-64a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text3" fill="black"><text id="kity_text_41" text-rendering="inherit" font-size="14" dy=".8em" y="820.3999702483416" x="352.50000036507845">对象</text></g></g><g id="minder_node8"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_84" fill="white" stroke="gray" d="M682.5000051930547,31.499958388507366A6,6,0,1,1,670.5000051930547,31.499958388507366A6,6,0,1,1,682.5000051930547,31.499958388507366"></path><path id="kity_path_85" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M687.5000054314733,20.499958388507366h256a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-256a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text8" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="12" dy=".8em" y="23.699958361685276" x="692.5000054314733">value：包含这个属性的数据值（undefined）</text></g></g><g id="minder_node9"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_92" fill="white" stroke="gray" d="M682.5000051930547,83.49995916336775A6,6,0,1,1,670.5000051930547,83.49995916336775A6,6,0,1,1,682.5000051930547,83.49995916336775"></path><path id="kity_path_93" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M687.5000054314733,72.49995916336775h410a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-410a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text9" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="75.69995913654566" x="692.5000054314733">configurable：能否通过delete删除、修改属性值/设为访问器属性（true）</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_120" fill="white" stroke="gray" d="M682.5000051930547,135.49995993822813A6,6,0,1,1,670.5000051930547,135.49995993822813A6,6,0,1,1,682.5000051930547,135.49995993822813"></path><path id="kity_path_121" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M687.5000054314733,124.49995993822813h242a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-242a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text10" fill="black"><text id="kity_text_117" text-rendering="inherit" font-size="12" dy=".8em" y="127.69995991140604" x="692.5000054314733">enumerable：能否通过for-in循环（true）</text></g></g><g id="minder_node11"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_128" fill="white" stroke="gray" d="M682.5000051930547,187.4999607130885A6,6,0,1,1,670.5000051930547,187.4999607130885A6,6,0,1,1,682.5000051930547,187.4999607130885"></path><path id="kity_path_129" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M687.5000054314733,176.4999607130885h212a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-212a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text11" fill="black"><text id="kity_text_125" text-rendering="inherit" font-size="12" dy=".8em" y="179.69996068626642" x="692.5000054314733">writable：能否修改属性的值（true）</text></g></g><g id="minder_node6"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_68" fill="white" stroke="gray" d="M551.5000032410026,108.99995954334736A6,6,0,1,1,539.5000032410026,108.99995954334736A6,6,0,1,1,551.5000032410026,108.99995954334736"></path><path id="kity_path_69" fill="none" stroke="gray" d="M541.0000032410026,108.99995954334736L550.0000032410026,108.99995954334736"></path></g><path id="node_outline6" fill="none" stroke="none" d="M556.5000034794211,95.49995953589678h81a5,5,0,0,1,5,5v17a5,5,0,0,1,-5,5h-81a5,5,0,0,1,-5,-5v-17a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text6" fill="black"><text id="kity_text_65" text-rendering="inherit" font-size="12" dy=".8em" y="100.69995950907469" x="561.5000034794211">数据属性</text></g><g id="kity_g_130" style="cursor: pointer;"><path id="kity_path_131" fill="none" stroke="none" d="M619.000004298985,99.99995953589678h12a2,2,0,0,1,2,2v13a2,2,0,0,1,-2,2h-12a2,2,0,0,1,-2,-2v-13a2,2,0,0,1,2,-2z"></path><path id="kity_path_132" fill="black" stroke="none" d="M628.0000043362379,110.99995943903923H622.0000043362379V109.99995943903923h6L628.0000043362379,110.99995943903923L628.0000043362379,110.99995943903923zM628.0000043362379,108.99995943903923H622.0000043362379V107.99995943903923h6V108.99995943903923zM628.0000043362379,106.99995943903923H622.0000043362379V105.99995943903923h6V106.99995943903923zM627.5000043362379,112.99995943903923H621.0000043362379V103.99995943903923h8v7.5M628.0000043362379,113.99995943903923l2,-2V102.99995943903923H620.0000043362379v11"></path></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;" display="none"><path id="kity_path_139" fill="white" stroke="gray" d="M693.5000053569674,239.4999614879489A6,6,0,1,1,681.5000053569674,239.4999614879489A6,6,0,1,1,693.5000053569674,239.4999614879489"></path><path id="kity_path_140" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M698.500005595386,228.4999614879489h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text12" fill="black"><text id="kity_text_136" text-rendering="inherit" font-size="12" dy=".8em" y="231.6999614611268" x="703.500005595386">configurable</text></g></g><g id="minder_node13"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_147" fill="white" stroke="gray" d="M693.5000053569674,291.4999622628093A6,6,0,1,1,681.5000053569674,291.4999622628093A6,6,0,1,1,693.5000053569674,291.4999622628093"></path><path id="kity_path_148" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M698.500005595386,280.4999622628093h79a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-79a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text13" fill="black"><text id="kity_text_144" text-rendering="inherit" font-size="12" dy=".8em" y="283.6999622359872" x="703.500005595386">enumerable</text></g></g><g id="minder_node14"><g id="node_expander13" style="cursor: pointer;" display="none"><path id="kity_path_155" fill="white" stroke="gray" d="M693.5000053569674,343.49996303766966A6,6,0,1,1,681.5000053569674,343.49996303766966A6,6,0,1,1,693.5000053569674,343.49996303766966"></path><path id="kity_path_156" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M698.500005595386,332.49996303766966h255a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-255a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text14" fill="black"><text id="kity_text_152" text-rendering="inherit" font-size="12" dy=".8em" y="335.69996301084757" x="703.500005595386">get：再读取属性时调用的函数（undefined）</text></g></g><g id="minder_node15"><g id="node_expander14" style="cursor: pointer;" display="none"><path id="kity_path_163" fill="white" stroke="gray" d="M693.5000053569674,395.49996381253004A6,6,0,1,1,681.5000053569674,395.49996381253004A6,6,0,1,1,693.5000053569674,395.49996381253004"></path><path id="kity_path_164" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M698.500005595386,384.49996381253004h253a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text15" fill="black"><text id="kity_text_160" text-rendering="inherit" font-size="12" dy=".8em" y="387.69996378570795" x="703.500005595386">set：再写入属性时调用的函数（undefined）</text></g></g><g id="minder_node7" opacity="1"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_76" fill="white" stroke="gray" d="M551.5000032410026,316.9999626427889A6,6,0,1,1,539.5000032410026,316.9999626427889A6,6,0,1,1,551.5000032410026,316.9999626427889"></path><path id="kity_path_77" fill="none" stroke="gray" d="M541.0000032410026,316.9999626427889L550.0000032410026,316.9999626427889"></path></g><path id="node_outline7" fill="none" stroke="none" d="M556.5000034794211,303.4999626353383h92a5,5,0,0,1,5,5v17a5,5,0,0,1,-5,5h-92a5,5,0,0,1,-5,-5v-17a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text7" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="308.6999626085162" x="561.5000034794211">访问器属性</text></g><g id="kity_g_165" style="cursor: pointer;"><path id="kity_path_166" fill="none" stroke="none" d="M630.0000044628978,307.9999626353383h12a2,2,0,0,1,2,2v13a2,2,0,0,1,-2,2h-12a2,2,0,0,1,-2,-2v-13a2,2,0,0,1,2,-2z"></path><path id="kity_path_167" fill="black" stroke="none" d="M639.0000045001507,318.99996253848076H633.0000045001507V317.99996253848076h6L639.0000045001507,318.99996253848076L639.0000045001507,318.99996253848076zM639.0000045001507,316.99996253848076H633.0000045001507V315.99996253848076h6V316.99996253848076zM639.0000045001507,314.99996253848076H633.0000045001507V313.99996253848076h6V314.99996253848076zM638.5000045001507,320.99996253848076H632.0000045001507V311.99996253848076h8v7.5M639.0000045001507,321.99996253848076l2,-2V310.99996253848076H631.0000045001507v11"></path></g></g><g id="minder_node5" opacity="1"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_60" fill="white" stroke="gray" d="M442.500001616776,212.49996108561754A6,6,0,1,1,430.500001616776,212.49996108561754A6,6,0,1,1,442.500001616776,212.49996108561754"></path><path id="kity_path_61" fill="none" stroke="gray" d="M432.000001616776,212.49996108561754L441.000001616776,212.49996108561754"></path></g><path id="node_outline5" fill="none" stroke="none" d="M447.50000185519457,201.49996108561754h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text5" fill="black"><text id="kity_text_57" text-rendering="inherit" font-size="12" dy=".8em" y="204.69996105879545" x="452.50000185519457">对象属性</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_184" fill="white" stroke="gray" d="M442.500001616776,1446.4999794736505A6,6,0,1,1,430.500001616776,1446.4999794736505A6,6,0,1,1,442.500001616776,1446.4999794736505"></path><path id="kity_path_185" fill="none" stroke="gray" d="M432.000001616776,1446.4999794736505L441.000001616776,1446.4999794736505"></path></g><path id="node_outline16" fill="none" stroke="none" d="M447.50000185519457,1435.4999794736505h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text16" fill="black"><text id="kity_text_181" text-rendering="inherit" font-size="12" dy=".8em" y="1438.6999794468284" x="452.50000185519457">创建对象</text></g></g><g id="minder_node17" opacity="1"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_216" fill="white" stroke="gray" d="M585.500003747642,750.4999691024423A6,6,0,1,1,573.500003747642,750.4999691024423A6,6,0,1,1,585.500003747642,750.4999691024423"></path><path id="kity_path_217" fill="none" stroke="gray" d="M575.000003747642,750.4999691024423L584.000003747642,750.4999691024423"></path></g><path id="node_outline17" fill="none" stroke="none" d="M590.5000039860606,739.4999691024423h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text17" fill="black"><text id="kity_text_213" text-rendering="inherit" font-size="12" dy=".8em" y="742.6999690756202" x="595.5000039860606">构造函数</text></g></g><g id="minder_node28" opacity="1"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_304" fill="white" stroke="gray" d="M552.5000032559037,464.49996484071016A6,6,0,1,1,540.5000032559037,464.49996484071016A6,6,0,1,1,552.5000032559037,464.49996484071016"></path><path id="kity_path_305" fill="none" stroke="gray" d="M542.0000032559037,464.49996484071016L551.0000032559037,464.49996484071016"></path></g><path id="node_outline28" fill="none" stroke="none" d="M557.5000034943223,453.49996484071016h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text28" fill="black"><text id="kity_text_301" text-rendering="inherit" font-size="12" dy=".8em" y="456.6999648138881" x="562.5000034943223">工厂函数</text></g></g><g id="minder_node29" opacity="1"><g id="node_expander28" style="cursor: pointer;"><path id="kity_path_312" fill="white" stroke="gray" d="M563.5000034198165,1445.4999794587493A6,6,0,1,1,551.5000034198165,1445.4999794587493A6,6,0,1,1,563.5000034198165,1445.4999794587493"></path><path id="kity_path_313" fill="none" stroke="gray" d="M553.0000034198165,1445.4999794587493L562.0000034198165,1445.4999794587493"></path></g><path id="node_outline29" fill="none" stroke="none" d="M568.5000036582351,1434.4999794587493h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text29" fill="black"><text id="kity_text_309" text-rendering="inherit" font-size="12" dy=".8em" y="1437.6999794319272" x="573.5000036582351">原型模型</text></g></g><g id="minder_node30"><g id="node_expander29" style="cursor: pointer;"><path id="kity_path_360" fill="white" stroke="gray" d="M672.5000050440431,1119.4999746009707A6,6,0,1,1,660.5000050440431,1119.4999746009707A6,6,0,1,1,672.5000050440431,1119.4999746009707"></path><path id="kity_path_361" fill="none" stroke="gray" d="M662.0000050440431,1119.4999746009707L671.0000050440431,1119.4999746009707"></path></g><path id="node_outline30" fill="none" stroke="none" d="M677.5000052824616,1108.4999746009707h35a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-35a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text30" fill="black"><text id="kity_text_357" text-rendering="inherit" font-size="12" dy=".8em" y="1111.6999745741487" x="682.5000052824616">例子</text></g></g><g id="minder_node31" opacity="1"><g id="node_expander30" style="cursor: pointer;" display="none"><path id="kity_path_368" fill="white" stroke="gray" d="M757.5000063106418,1020.4999731257558A6,6,0,1,1,745.5000063106418,1020.4999731257558A6,6,0,1,1,757.5000063106418,1020.4999731257558"></path><path id="kity_path_369" fill="none" stroke="gray" d="M747.0000063106418,1020.4999731257558L756.0000063106418,1020.4999731257558"></path></g><path id="node_outline31" fill="none" stroke="none" d="M762.5000065490603,973.4999731257558h982a5,5,0,0,1,5,5v84a5,5,0,0,1,-5,5h-982a5,5,0,0,1,-5,-5v-84a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text31" fill="black"><text id="kity_text_365" text-rendering="inherit" font-size="12" dy=".8em" y="976.6999730989337" x="767.5000065490603">    function Person(){ } </text><text id="kity_text_370" text-rendering="inherit" font-size="12" dy=".8em" y="994.6999730989337" x="767.5000065490603">Person.prototype.name = "Nicholas"; Person.prototype.age = 29; Person.prototype.job = "Software Engineer"; Person.prototype.sayName = function(){     alert(this.name); }; </text><text id="kity_text_371" text-rendering="inherit" font-size="12" dy=".8em" y="1012.6999730989337" x="767.5000065490603"></text><text id="kity_text_372" text-rendering="inherit" font-size="12" dy=".8em" y="1030.6999730989337" x="767.5000065490603">var person1 = new Person(); person1.sayName();   //"Nicholas" </text><text id="kity_text_373" text-rendering="inherit" font-size="12" dy=".8em" y="1048.6999730989337" x="767.5000065490603">var person2 = new Person(); person2.sayName();   //"Nicholas"</text></g></g><g id="minder_node33" opacity="1"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_390" fill="white" stroke="gray" d="M757.5000063106418,1155.9999751448631A6,6,0,1,1,745.5000063106418,1155.9999751448631A6,6,0,1,1,757.5000063106418,1155.9999751448631"></path><path id="kity_path_391" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M762.5000077560544,1097.4999758526683h210a5,5,0,0,1,5,5v107a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-107a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text33" fill="black"><text id="kity_text_387" text-rendering="inherit" font-size="12" dy=".8em" y="1195.6999758258462" x="848.5000077560544">原型链</text></g><image id="kity_image_392" xlink:href="http://kityminder-img.gz.bcebos.com/024330e1015a7fe769ec2ad4c06c7980b1e41859" x="767.5000077560544" y="1102.4999758526683" width="200" height="90"></image></g><g id="minder_node34" opacity="1"><g id="node_expander33" style="cursor: pointer;" display="none"><path id="kity_path_399" fill="white" stroke="gray" d="M757.5000063106418,1255.4999766275287A6,6,0,1,1,745.5000063106418,1255.4999766275287A6,6,0,1,1,757.5000063106418,1255.4999766275287"></path><path id="kity_path_400" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M762.5000065490603,1244.4999766275287h706a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-706a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text34" fill="black"><text id="kity_text_396" text-rendering="inherit" font-size="12" dy=".8em" y="1247.6999766007066" x="767.5000065490603">当创建一个属性时，会屏蔽原型对象中的同名属性，但不会修改原型中的属性值；当用delete删除时，也能重新访问原型中的属性。</text></g></g><g id="minder_node35" opacity="1"><g id="node_expander34" style="cursor: pointer;"><path id="kity_path_407" fill="white" stroke="gray" d="M683.5000052079558,1360.4999781921506A6,6,0,1,1,671.5000052079558,1360.4999781921506A6,6,0,1,1,683.5000052079558,1360.4999781921506"></path><path id="kity_path_408" fill="none" stroke="gray" d="M673.0000052079558,1360.4999781921506L682.0000052079558,1360.4999781921506"></path></g><path id="node_outline35" fill="none" stroke="none" d="M688.5000054463744,1349.4999781921506h21a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-21a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text35" fill="black"><text id="kity_text_404" text-rendering="inherit" font-size="12" dy=".8em" y="1352.6999781653285" x="693.5000054463744">in</text></g></g><g id="minder_node39" opacity="1"><g id="node_expander38" style="cursor: pointer;"><path id="kity_path_439" fill="white" stroke="gray" d="M683.5000052079558,1536.499980814755A6,6,0,1,1,671.5000052079558,1536.499980814755A6,6,0,1,1,683.5000052079558,1536.499980814755"></path><path id="kity_path_440" fill="none" stroke="gray" d="M673.0000052079558,1536.499980814755L682.0000052079558,1536.499980814755"></path></g><path id="node_outline39" fill="none" stroke="none" d="M688.5000054463744,1525.499980814755h311a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-311a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text39" fill="black"><text id="kity_text_436" text-rendering="inherit" font-size="12" dy=".8em" y="1528.6999807879329" x="693.5000054463744">封装：用包含所有属性和方法的对象字面量重写原型对象</text></g></g><g id="minder_node47" opacity="1"><g id="node_expander46" style="cursor: pointer;"><path id="kity_path_520" fill="white" stroke="gray" d="M679.5000051483512,1712.4999834373593A6,6,0,1,1,667.5000051483512,1712.4999834373593A6,6,0,1,1,679.5000051483512,1712.4999834373593"></path><path id="kity_path_521" fill="none" stroke="gray" d="M669.0000051483512,1712.4999834373593L678.0000051483512,1712.4999834373593"></path></g><path id="node_outline47" fill="none" stroke="none" d="M684.5000053867698,1701.4999834373593h47a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-47a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text47" fill="black"><text id="kity_text_517" text-rendering="inherit" font-size="12" dy=".8em" y="1704.6999834105372" x="689.5000053867698">动态性</text></g></g><g id="minder_node48"><g id="node_expander47" style="cursor: pointer;" display="none"><path id="kity_path_528" fill="white" stroke="gray" d="M776.5000065937638,1686.4999830499291A6,6,0,1,1,764.5000065937638,1686.4999830499291A6,6,0,1,1,776.5000065937638,1686.4999830499291"></path><path id="kity_path_529" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M781.5000068321824,1675.4999830499291h251a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-251a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text48" fill="black"><text id="kity_text_525" text-rendering="inherit" font-size="12" dy=".8em" y="1678.699983023107" x="786.5000068321824">实例中的指针仅指向原型，而不指向构造函数</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;" display="none"><path id="kity_path_536" fill="white" stroke="gray" d="M776.5000065937638,1738.4999838247895A6,6,0,1,1,764.5000065937638,1738.4999838247895A6,6,0,1,1,776.5000065937638,1738.4999838247895"></path><path id="kity_path_537" fill="none" stroke="gray"></path></g><path id="node_outline49" fill="none" stroke="none" d="M781.5000068321824,1727.4999838247895h443a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-443a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text49" fill="black"><text id="kity_text_533" text-rendering="inherit" font-size="12" dy=".8em" y="1730.6999837979674" x="786.5000068321824">若先创建实例，再重写原型对象，则会发生错误，因为指向的原型不包含以该函数</text></g></g><g id="minder_node50" opacity="1"><g id="node_expander49" style="cursor: pointer;"><path id="kity_path_546" fill="white" stroke="gray" d="M583.5000037178397,1812.4999849274755A6,6,0,1,1,571.5000037178397,1812.4999849274755A6,6,0,1,1,583.5000037178397,1812.4999849274755"></path><path id="kity_path_547" fill="none" stroke="gray" d="M573.0000037178397,1812.4999849274755L582.0000037178397,1812.4999849274755"></path></g><path id="node_outline50" fill="none" stroke="none" d="M588.5000039562583,1801.4999849274755h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text50" fill="black"><text id="kity_text_543" text-rendering="inherit" font-size="12" dy=".8em" y="1804.6999849006534" x="593.5000039562583">组合使用构造函数和原型模型</text></g></g><g id="minder_node53" opacity="1"><g id="node_expander52" style="cursor: pointer;"><path id="kity_path_570" fill="white" stroke="gray" d="M571.5000035390258,1967.4999872371554A6,6,0,1,1,559.5000035390258,1967.4999872371554A6,6,0,1,1,571.5000035390258,1967.4999872371554"></path><path id="kity_path_571" fill="none" stroke="gray" d="M561.0000035390258,1967.4999872371554L570.0000035390258,1967.4999872371554"></path></g><path id="node_outline53" fill="none" stroke="none" d="M576.5000037774444,1956.4999872371554h83a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-83a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text53" fill="black"><text id="kity_text_567" text-rendering="inherit" font-size="12" dy=".8em" y="1959.6999872103333" x="581.5000037774444">动态原型模式</text></g></g><g id="minder_node60" opacity="1"><g id="node_expander59" style="cursor: pointer;"><path id="kity_path_637" fill="white" stroke="gray" d="M552.5000032559037,2161.4999901279807A6,6,0,1,1,540.5000032559037,2161.4999901279807A6,6,0,1,1,552.5000032559037,2161.4999901279807"></path><path id="kity_path_638" fill="none" stroke="gray" d="M542.0000032559037,2161.4999901279807L551.0000032559037,2161.4999901279807"></path></g><path id="node_outline60" fill="none" stroke="none" d="M557.5000034943223,2150.4999901279807h167a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-167a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text60" fill="black"><text id="kity_text_634" text-rendering="inherit" font-size="12" dy=".8em" y="2153.6999901011586" x="562.5000034943223">构造函数、原型、实例的关系</text></g></g><g id="minder_node159" opacity="1"><g id="node_expander165" style="cursor: pointer;"><path id="kity_path_1798" fill="white" stroke="gray" d="M331.4999999627471,2579.499996356666A6,6,0,1,1,319.4999999627471,2579.499996356666A6,6,0,1,1,331.4999999627471,2579.499996356666"></path><path id="kity_path_1799" fill="none" stroke="gray" d="M320.9999999627471,2579.499996356666L329.9999999627471,2579.499996356666"></path></g><path id="node_outline166" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M335.50000036507845,2566.499996356666h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text166" fill="black"><text id="kity_text_1765" text-rendering="inherit" font-size="14" dy=".8em" y="2570.3999963253736" x="352.50000036507845">继承</text></g></g><g id="minder_node160"><g id="node_expander158" style="cursor: pointer;" display="none"><path id="kity_path_1777" fill="white" stroke="gray" d="M441.5000016018748,2313.499992392957A6,6,0,1,1,429.5000016018748,2313.499992392957A6,6,0,1,1,441.5000016018748,2313.499992392957"></path><path id="kity_path_1778" fill="none" stroke="gray"></path></g><path id="node_outline159" fill="none" stroke="none" d="M446.5000018402934,2302.499992392957h169a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-169a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text159" fill="black"><text id="kity_text_1742" text-rendering="inherit" font-size="12" dy=".8em" y="2305.699992366135" x="451.5000018402934">接口继承——只继承方法签名</text></g></g><g id="minder_node163"><g id="node_expander159" style="cursor: pointer;" display="none"><path id="kity_path_1780" fill="white" stroke="gray" d="M838.5000075176358,2446.4999943748116A6,6,0,1,1,826.5000075176358,2446.4999943748116A6,6,0,1,1,838.5000075176358,2446.4999943748116"></path><path id="kity_path_1781" fill="none" stroke="gray"></path></g><path id="node_outline160" fill="none" stroke="none" d="M843.5000077560544,2354.4999943748116h425a5,5,0,0,1,5,5v174a5,5,0,0,1,-5,5h-425a5,5,0,0,1,-5,-5v-174a5,5,0,0,1,5,-5z"></path><g id="node_text160" fill="black"><text id="kity_text_1744" text-rendering="inherit" font-size="12" dy=".8em" y="2357.6999943479896" x="848.5000077560544">    function SuperType(){     this.property = true; } </text><text id="kity_text_1745" text-rendering="inherit" font-size="12" dy=".8em" y="2375.6999943479896" x="848.5000077560544">	SuperType.prototype.getSuperValue = function(){     return this.property; }; </text><text id="kity_text_1746" text-rendering="inherit" font-size="12" dy=".8em" y="2393.6999943479896" x="848.5000077560544">	 </text><text id="kity_text_1747" text-rendering="inherit" font-size="12" dy=".8em" y="2411.6999943479896" x="848.5000077560544">	function SubType(){     this.subproperty = false; } </text><text id="kity_text_1748" text-rendering="inherit" font-size="12" dy=".8em" y="2429.6999943479896" x="848.5000077560544">	 </text><text id="kity_text_1749" text-rendering="inherit" font-size="12" dy=".8em" y="2447.6999943479896" x="848.5000077560544">	//继承了 SuperType </text><text id="kity_text_1750" text-rendering="inherit" font-size="12" dy=".8em" y="2465.6999943479896" x="848.5000077560544">	SubType.prototype = new SuperType(); </text><text id="kity_text_1751" text-rendering="inherit" font-size="12" dy=".8em" y="2483.6999943479896" x="848.5000077560544">	SubType.prototype.getSubValue = function (){     return this.subproperty; }; </text><text id="kity_text_1752" text-rendering="inherit" font-size="12" dy=".8em" y="2501.6999943479896" x="848.5000077560544">	 </text><text id="kity_text_1753" text-rendering="inherit" font-size="12" dy=".8em" y="2519.6999943479896" x="848.5000077560544">	var instance = new SubType(); alert(instance.getSuperValue());      //true </text></g></g><g id="minder_node164"><g id="node_expander160" style="cursor: pointer;" display="none"><path id="kity_path_1783" fill="white" stroke="gray" d="M838.5000075176358,2633.499997161329A6,6,0,1,1,826.5000075176358,2633.499997161329A6,6,0,1,1,838.5000075176358,2633.499997161329"></path><path id="kity_path_1784" fill="none" stroke="gray"></path></g><path id="node_outline161" fill="none" stroke="none" d="M843.5000077560544,2568.4999979659915h445a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-445a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text161" fill="black"><text id="kity_text_1755" text-rendering="inherit" font-size="12" dy=".8em" y="2679.6999979391694" x="848.5000077560544">原型链——继承本质：通过将一个类型的实例复制给另一个构造函数的原型实现的</text></g><image id="kity_image_1766" xlink:href="http://kityminder-img.gz.bcebos.com/ca792ebe11aa93fb721b9f752965c0e5b4de18d7" x="965.5000077560544" y="2573.4999979659915" width="200" height="103"></image></g><g id="minder_node165"><g id="node_expander162" style="cursor: pointer;" display="none"><path id="kity_path_1789" fill="white" stroke="gray" d="M838.5000075176358,2820.9999999552965A6,6,0,1,1,826.5000075176358,2820.9999999552965A6,6,0,1,1,838.5000075176358,2820.9999999552965"></path><path id="kity_path_1790" fill="none" stroke="gray" d="M828.0000075176358,2820.9999999552965L837.0000075176358,2820.9999999552965"></path></g><path id="node_outline163" fill="none" stroke="none" d="M843.5000077560544,2728.500001169741h551a5,5,0,0,1,5,5v175a5,5,0,0,1,-5,5h-551a5,5,0,0,1,-5,-5v-175a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text163" fill="black"><text id="kity_text_1759" text-rendering="inherit" font-size="12" dy=".8em" y="2894.700001142919" x="848.5000077560544">默认的原型Object。当调用instance.toString()时，实际上调用的时保存在Object.prototype中的方法</text></g><image id="kity_image_1767" xlink:href="http://kityminder-img.gz.bcebos.com/fe58a3a6513e735604616c46d907a1c0232d774e" x="1018.5000077560544" y="2733.500001169741" width="200" height="158"></image></g><g id="minder_node162"><g id="node_expander163" style="cursor: pointer;"><path id="kity_path_1792" fill="white" stroke="gray" d="M681.5000051781535,2633.499997161329A6,6,0,1,1,669.5000051781535,2633.499997161329A6,6,0,1,1,681.5000051781535,2633.499997161329"></path><path id="kity_path_1793" fill="none" stroke="gray" d="M671.0000051781535,2633.499997161329L680.0000051781535,2633.499997161329"></path></g><path id="node_outline164" fill="none" stroke="none" d="M686.5000054165721,2622.499997161329h107a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-107a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text164" fill="black"><text id="kity_text_1761" text-rendering="inherit" font-size="12" dy=".8em" y="2625.6999971345067" x="691.5000054165721">依靠原型链来实现</text></g></g><g id="minder_node161"><g id="node_expander164" style="cursor: pointer;"><path id="kity_path_1795" fill="white" stroke="gray" d="M441.5000016018748,2845.500000320375A6,6,0,1,1,429.5000016018748,2845.500000320375A6,6,0,1,1,441.5000016018748,2845.500000320375"></path><path id="kity_path_1796" fill="none" stroke="gray" d="M431.0000016018748,2845.500000320375L440.0000016018748,2845.500000320375"></path></g><path id="node_outline165" fill="none" stroke="none" d="M446.5000018402934,2834.500000320375h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text165" fill="black"><text id="kity_text_1763" text-rendering="inherit" font-size="12" dy=".8em" y="2837.700000293553" x="451.5000018402934">✔实现继承——继承实际的的方法</text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;" display="none"><path id="kity_path_232" fill="white" stroke="gray" d="M850.5000076964498,503.49996542185545A6,6,0,1,1,838.5000076964498,503.49996542185545A6,6,0,1,1,850.5000076964498,503.49996542185545"></path><path id="kity_path_233" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M855.5000079348683,492.49996542185545h138a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-138a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text19" fill="black"><text id="kity_text_229" text-rendering="inherit" font-size="12" dy=".8em" y="495.69996539503336" x="860.5000079348683">1、没有显式地创建对象</text></g></g><g id="minder_node20"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_240" fill="white" stroke="gray" d="M850.5000076964498,555.4999661967158A6,6,0,1,1,838.5000076964498,555.4999661967158A6,6,0,1,1,850.5000076964498,555.4999661967158"></path><path id="kity_path_241" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M855.5000079348683,544.4999661967158h170a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-170a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text20" fill="black"><text id="kity_text_237" text-rendering="inherit" font-size="12" dy=".8em" y="547.6999661698937" x="860.5000079348683">2、直接将属性和方法赋给this</text></g></g><g id="minder_node21"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_248" fill="white" stroke="gray" d="M850.5000076964498,607.4999669715762A6,6,0,1,1,838.5000076964498,607.4999669715762A6,6,0,1,1,850.5000076964498,607.4999669715762"></path><path id="kity_path_249" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M855.5000079348683,596.4999669715762h112a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-112a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text21" fill="black"><text id="kity_text_245" text-rendering="inherit" font-size="12" dy=".8em" y="599.6999669447541" x="860.5000079348683">3、没有return语句</text></g></g><g id="minder_node22"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_256" fill="white" stroke="gray" d="M850.5000076964498,659.4999677464366A6,6,0,1,1,838.5000076964498,659.4999677464366A6,6,0,1,1,850.5000076964498,659.4999677464366"></path><path id="kity_path_257" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M855.5000079348683,648.4999677464366h174a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-174a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text22" fill="black"><text id="kity_text_253" text-rendering="inherit" font-size="12" dy=".8em" y="651.6999677196145" x="860.5000079348683">4、函数名首字母大写，非驼峰</text></g></g><g id="minder_node18"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_224" fill="white" stroke="gray" d="M694.5000053718686,581.499966584146A6,6,0,1,1,682.5000053718686,581.499966584146A6,6,0,1,1,694.5000053718686,581.499966584146"></path><path id="kity_path_225" fill="none" stroke="gray" d="M684.0000053718686,581.499966584146L693.0000053718686,581.499966584146"></path></g><path id="node_outline18" fill="none" stroke="none" d="M699.5000056102872,570.499966584146h106a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-106a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text18" fill="black"><text id="kity_text_221" text-rendering="inherit" font-size="12" dy=".8em" y="573.6999665573239" x="704.5000056102872">与原生函数的区别</text></g></g><g id="minder_node24"><g id="node_expander23" style="cursor: pointer;" display="none"><path id="kity_path_272" fill="white" stroke="gray" d="M838.5000075176358,711.499968521297A6,6,0,1,1,826.5000075176358,711.499968521297A6,6,0,1,1,838.5000075176358,711.499968521297"></path><path id="kity_path_273" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="none" stroke="none" d="M843.5000077560544,700.499968521297h126a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-126a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text24" fill="black"><text id="kity_text_269" text-rendering="inherit" font-size="12" dy=".8em" y="703.6999684944749" x="848.5000077560544">（1）创建一个新对象</text></g></g><g id="minder_node25"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_280" fill="white" stroke="gray" d="M838.5000075176358,763.4999692961574A6,6,0,1,1,826.5000075176358,763.4999692961574A6,6,0,1,1,838.5000075176358,763.4999692961574"></path><path id="kity_path_281" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M843.5000077560544,752.4999692961574h338a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-338a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text25" fill="black"><text id="kity_text_277" text-rendering="inherit" font-size="12" dy=".8em" y="755.6999692693353" x="848.5000077560544">（2）将构造函数的作用域赋给新对象（this指向这个新对象）</text></g></g><g id="minder_node26"><g id="node_expander25" style="cursor: pointer;" display="none"><path id="kity_path_288" fill="white" stroke="gray" d="M838.5000075176358,815.4999700710177A6,6,0,1,1,826.5000075176358,815.4999700710177A6,6,0,1,1,838.5000075176358,815.4999700710177"></path><path id="kity_path_289" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="none" stroke="none" d="M843.5000077560544,804.4999700710177h281a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-281a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text26" fill="black"><text id="kity_text_285" text-rendering="inherit" font-size="12" dy=".8em" y="807.6999700441957" x="848.5000077560544">（3）执行构造函数中的代码（为新对象添加属性）</text></g></g><g id="minder_node27"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_296" fill="white" stroke="gray" d="M838.5000075176358,867.4999708458781A6,6,0,1,1,826.5000075176358,867.4999708458781A6,6,0,1,1,838.5000075176358,867.4999708458781"></path><path id="kity_path_297" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M843.5000077560544,856.4999708458781h102a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-102a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text27" fill="black"><text id="kity_text_293" text-rendering="inherit" font-size="12" dy=".8em" y="859.699970819056" x="848.5000077560544">（4）返回新对象</text></g></g><g id="minder_node23" opacity="1"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_264" fill="white" stroke="gray" d="M694.5000053718686,789.4999696835876A6,6,0,1,1,682.5000053718686,789.4999696835876A6,6,0,1,1,694.5000053718686,789.4999696835876"></path><path id="kity_path_265" fill="none" stroke="gray" d="M684.0000053718686,789.4999696835876L693.0000053718686,789.4999696835876"></path></g><path id="node_outline23" fill="none" stroke="none" d="M699.5000056102872,778.4999696835876h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text23" fill="black"><text id="kity_text_261" text-rendering="inherit" font-size="12" dy=".8em" y="781.6999696567655" x="704.5000056102872">使用new操作符</text></g></g><g id="minder_node167"><g id="node_expander166" style="cursor: pointer;" display="none"><path id="kity_path_1830" fill="white" stroke="gray" d="M694.5000053718686,919.4999716207385A6,6,0,1,1,682.5000053718686,919.4999716207385A6,6,0,1,1,694.5000053718686,919.4999716207385"></path><path id="kity_path_1831" fill="none" stroke="gray"></path></g><path id="node_outline167" fill="none" stroke="none" d="M699.5000056102872,908.4999716207385h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text167" fill="black"><text id="kity_text_1827" text-rendering="inherit" font-size="12" dy=".8em" y="911.6999715939164" x="704.5000056102872">缺点：成员（包括函数）无法复用</text></g></g><g id="minder_node51"><g id="node_expander50" style="cursor: pointer;" display="none"><path id="kity_path_554" fill="white" stroke="gray" d="M799.5000069364905,1786.4999845400453A6,6,0,1,1,787.5000069364905,1786.4999845400453A6,6,0,1,1,799.5000069364905,1786.4999845400453"></path><path id="kity_path_555" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M804.5000071749091,1775.4999845400453h157a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-157a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text51" fill="black"><text id="kity_text_551" text-rendering="inherit" font-size="12" dy=".8em" y="1778.6999845132232" x="809.5000071749091">构造函数——定义实例属性</text></g></g><g id="minder_node52"><g id="node_expander51" style="cursor: pointer;" display="none"><path id="kity_path_562" fill="white" stroke="gray" d="M799.5000069364905,1838.4999853149056A6,6,0,1,1,787.5000069364905,1838.4999853149056A6,6,0,1,1,799.5000069364905,1838.4999853149056"></path><path id="kity_path_563" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M804.5000071749091,1827.4999853149056h205a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text52" fill="black"><text id="kity_text_559" text-rendering="inherit" font-size="12" dy=".8em" y="1830.6999852880836" x="809.5000071749091">原型模型——定义方法和共享的属性</text></g></g><g id="minder_node61"><g id="node_expander60" style="cursor: pointer;" display="none"><path id="kity_path_645" fill="white" stroke="gray" d="M769.5000064894557,2109.4999893531203A6,6,0,1,1,757.5000064894557,2109.4999893531203A6,6,0,1,1,769.5000064894557,2109.4999893531203"></path><path id="kity_path_646" fill="none" stroke="gray" d="M759.0000064894557,2109.4999893531203L768.0000064894557,2109.4999893531203"></path></g><path id="node_outline61" fill="none" stroke="none" d="M774.5000067278743,2098.4999893531203h179a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-179a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text61" fill="black"><text id="kity_text_642" text-rendering="inherit" font-size="12" dy=".8em" y="2101.6999893262982" x="779.5000067278743">每个构造函数都有一个原型对象</text></g></g><g id="minder_node62"><g id="node_expander61" style="cursor: pointer;" display="none"><path id="kity_path_653" fill="white" stroke="gray" d="M769.5000064894557,2161.4999901279807A6,6,0,1,1,757.5000064894557,2161.4999901279807A6,6,0,1,1,769.5000064894557,2161.4999901279807"></path><path id="kity_path_654" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M774.5000067278743,2150.4999901279807h227a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-227a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text62" fill="black"><text id="kity_text_650" text-rendering="inherit" font-size="12" dy=".8em" y="2153.6999901011586" x="779.5000067278743">原型对象都包含一个指向构造函数的指针</text></g></g><g id="minder_node63"><g id="node_expander62" style="cursor: pointer;" display="none"><path id="kity_path_661" fill="white" stroke="gray" d="M769.5000064894557,2213.499990902841A6,6,0,1,1,757.5000064894557,2213.499990902841A6,6,0,1,1,769.5000064894557,2213.499990902841"></path><path id="kity_path_662" fill="none" stroke="gray"></path></g><path id="node_outline63" fill="none" stroke="none" d="M774.5000067278743,2202.499990902841h227a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-227a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text63" fill="black"><text id="kity_text_658" text-rendering="inherit" font-size="12" dy=".8em" y="2205.699990876019" x="779.5000067278743">而实例包含一个指向原型对象的内部指针</text></g></g><g id="minder_node134"><g id="node_expander133" style="cursor: pointer;" display="none"><path id="kity_path_1454" fill="white" stroke="gray" d="M661.5000048801303,464.49996484071016A6,6,0,1,1,649.5000048801303,464.49996484071016A6,6,0,1,1,661.5000048801303,464.49996484071016"></path><path id="kity_path_1455" fill="none" stroke="gray"></path></g><path id="node_outline134" fill="none" stroke="none" d="M666.5000051185489,453.49996484071016h359a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-359a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text134" fill="black"><text id="kity_text_1451" text-rendering="inherit" font-size="12" dy=".8em" y="456.6999648138881" x="671.5000051185489">使用简单的函数创建对象，为对象添加属性和方法，然后返回对象</text></g></g><g id="minder_node54" opacity="1"><g id="node_expander53" style="cursor: pointer;" display="none"><path id="kity_path_578" fill="white" stroke="gray" d="M704.5000055208802,1887.4999860450625A6,6,0,1,1,692.5000055208802,1887.4999860450625A6,6,0,1,1,704.5000055208802,1887.4999860450625"></path><path id="kity_path_579" fill="none" stroke="gray"></path></g><path id="node_outline54" fill="none" stroke="none" d="M709.5000057592988,1876.4999860450625h551a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-551a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text54" fill="black"><text id="kity_text_575" text-rendering="inherit" font-size="12" dy=".8em" y="1879.6999860182405" x="714.5000057592988">把所有信息封装在构造函数中，通过在构造函数中初始化原型，保持了同时使用构造函数和原型的优点</text></g></g><g id="minder_node168" opacity="1"><g id="node_expander167" style="cursor: pointer;"><path id="kity_path_1853" fill="white" stroke="gray" d="M693.5000053569674,2951.500001899898A6,6,0,1,1,681.5000053569674,2951.500001899898A6,6,0,1,1,693.5000053569674,2951.500001899898"></path><path id="kity_path_1854" fill="none" stroke="gray" d="M683.0000053569674,2951.500001899898L692.0000053569674,2951.500001899898"></path></g><path id="node_outline168" fill="none" stroke="none" d="M698.500005595386,2940.500001899898h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text168" fill="black"><text id="kity_text_1850" text-rendering="inherit" font-size="12" dy=".8em" y="2943.700001873076" x="703.500005595386">组合继承</text></g></g><g id="minder_node169"><g id="node_expander168" style="cursor: pointer;"><path id="kity_path_1861" fill="white" stroke="gray" d="M681.5000051781535,3057.500003479421A6,6,0,1,1,669.5000051781535,3057.500003479421A6,6,0,1,1,681.5000051781535,3057.500003479421"></path><path id="kity_path_1862" fill="none" stroke="gray" d="M671.0000051781535,3057.500003479421L680.0000051781535,3057.500003479421"></path></g><path id="node_outline169" fill="none" stroke="none" d="M686.5000054165721,3046.500003479421h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text169" fill="black"><text id="kity_text_1858" text-rendering="inherit" font-size="12" dy=".8em" y="3049.700003452599" x="691.5000054165721">其他继承</text></g></g><g id="minder_node170"><g id="node_expander169" style="cursor: pointer;"><path id="kity_path_1869" fill="white" stroke="gray" d="M790.5000068023801,3005.5000027045608A6,6,0,1,1,778.5000068023801,3005.5000027045608A6,6,0,1,1,790.5000068023801,3005.5000027045608"></path><path id="kity_path_1870" fill="none" stroke="gray" d="M780.0000068023801,3005.5000027045608L789.0000068023801,3005.5000027045608"></path></g><path id="node_outline170" fill="none" stroke="none" d="M795.5000070407987,2994.5000027045608h71a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-71a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text170" fill="black"><text id="kity_text_1866" text-rendering="inherit" font-size="12" dy=".8em" y="2997.7000026777387" x="800.5000070407987">原型式继承</text></g></g><g id="minder_node171"><g id="node_expander170" style="cursor: pointer;"><path id="kity_path_1877" fill="white" stroke="gray" d="M790.5000068023801,3057.500003479421A6,6,0,1,1,778.5000068023801,3057.500003479421A6,6,0,1,1,790.5000068023801,3057.500003479421"></path><path id="kity_path_1878" fill="none" stroke="gray" d="M780.0000068023801,3057.500003479421L789.0000068023801,3057.500003479421"></path></g><path id="node_outline171" fill="none" stroke="none" d="M795.5000070407987,3046.500003479421h71a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-71a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text171" fill="black"><text id="kity_text_1874" text-rendering="inherit" font-size="12" dy=".8em" y="3049.700003452599" x="800.5000070407987">寄生式继承</text></g></g><g id="minder_node172"><g id="node_expander171" style="cursor: pointer;"><path id="kity_path_1885" fill="white" stroke="gray" d="M790.5000068023801,3109.5000042542815A6,6,0,1,1,778.5000068023801,3109.5000042542815A6,6,0,1,1,790.5000068023801,3109.5000042542815"></path><path id="kity_path_1886" fill="none" stroke="gray" d="M780.0000068023801,3109.5000042542815L789.0000068023801,3109.5000042542815"></path></g><path id="node_outline172" fill="none" stroke="none" d="M795.5000070407987,3098.5000042542815h95a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-95a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text172" fill="black"><text id="kity_text_1882" text-rendering="inherit" font-size="12" dy=".8em" y="3101.7000042274594" x="800.5000070407987">寄生组合式继承</text></g></g><g id="minder_node173"><g id="node_expander172" style="cursor: pointer;" display="none"><path id="kity_path_1893" fill="white" stroke="gray" d="M911.5000086054206,3005.5000027045608A6,6,0,1,1,899.5000086054206,3005.5000027045608A6,6,0,1,1,911.5000086054206,3005.5000027045608"></path><path id="kity_path_1894" fill="none" stroke="gray"></path></g><path id="node_outline173" fill="none" stroke="none" d="M916.5000088438392,2994.5000027045608h406a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-406a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text173" fill="black"><text id="kity_text_1890" text-rendering="inherit" font-size="12" dy=".8em" y="2997.7000026777387" x="921.5000088438392">本质：执行对给定对象的浅复制。而复制得到的副本还可以得到进一步改造</text></g></g><g id="minder_node174"><g id="node_expander173" style="cursor: pointer;" display="none"><path id="kity_path_1901" fill="white" stroke="gray" d="M911.5000086054206,3057.500003479421A6,6,0,1,1,899.5000086054206,3057.500003479421A6,6,0,1,1,911.5000086054206,3057.500003479421"></path><path id="kity_path_1902" fill="none" stroke="gray"></path></g><path id="node_outline174" fill="none" stroke="none" d="M916.5000088438392,3046.500003479421h383a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-383a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text174" fill="black"><text id="kity_text_1898" text-rendering="inherit" font-size="12" dy=".8em" y="3049.700003452599" x="921.5000088438392">基于某个对象或某些信息创建一个对象，然后增强对象，最后返回对象</text></g></g><g id="minder_node175"><g id="node_expander174" style="cursor: pointer;" display="none"><path id="kity_path_1909" fill="white" stroke="gray" d="M935.5000089630485,3109.5000042542815A6,6,0,1,1,923.5000089630485,3109.5000042542815A6,6,0,1,1,935.5000089630485,3109.5000042542815"></path><path id="kity_path_1910" fill="none" stroke="gray"></path></g><path id="node_outline175" fill="none" stroke="none" d="M940.500009201467,3098.5000042542815h371a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-371a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text175" fill="black"><text id="kity_text_1906" text-rendering="inherit" font-size="12" dy=".8em" y="3101.7000042274594" x="945.500009201467">集寄生式继承和组合继承的优点，是实现基于类型继承的最有效方式</text></g></g><g id="minder_node176"><g id="node_expander175" style="cursor: pointer;" display="none"><path id="kity_path_1917" fill="white" stroke="gray" d="M802.500006981194,2951.500001899898A6,6,0,1,1,790.500006981194,2951.500001899898A6,6,0,1,1,802.500006981194,2951.500001899898"></path><path id="kity_path_1918" fill="none" stroke="gray"></path></g><path id="node_outline176" fill="none" stroke="none" d="M807.5000072196126,2940.500001899898h371a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-371a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text176" fill="black"><text id="kity_text_1914" text-rendering="inherit" font-size="12" dy=".8em" y="2943.700001873076" x="812.5000072196126">使用原型链继承共享的属性和方法，通过接用构造函数继承实例属性</text></g></g><g id="minder_node36"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_415" fill="white" stroke="gray" d="M754.5000062659383,1308.4999774172902A6,6,0,1,1,742.5000062659383,1308.4999774172902A6,6,0,1,1,754.5000062659383,1308.4999774172902"></path><path id="kity_path_416" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M759.5000065043569,1297.4999774172902h683a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-683a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text36" fill="black"><text id="kity_text_412" text-rendering="inherit" font-size="12" dy=".8em" y="1300.6999773904681" x="764.5000065043569">单独使用时alert("name" in person)，通过对象能访问给定属性时（无论是直接在对象上访问还是通过原型访问），返回true。</text></g></g><g id="minder_node37" opacity="1"><g id="node_expander36" style="cursor: pointer;" display="none"><path id="kity_path_423" fill="white" stroke="gray" d="M760.5000063553452,1359.4999781772494A6,6,0,1,1,748.5000063553452,1359.4999781772494A6,6,0,1,1,760.5000063553452,1359.4999781772494"></path><path id="kity_path_424" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M765.5000065937638,1348.4999781772494h736a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-736a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text37" fill="black"><text id="kity_text_420" text-rendering="inherit" font-size="12" dy=".8em" y="1351.6999781504273" x="770.5000065937638">与person.hasOwnProperty("name")配合使用：属性存在于实例中，都返回true；属性是原型中的属性，hasOwnProperty()返回false。</text></g></g><g id="minder_node38"><g id="node_expander37" style="cursor: pointer;" display="none"><path id="kity_path_431" fill="white" stroke="gray" d="M754.5000062659383,1412.499978967011A6,6,0,1,1,742.5000062659383,1412.499978967011A6,6,0,1,1,754.5000062659383,1412.499978967011"></path><path id="kity_path_432" fill="none" stroke="gray"></path></g><path id="node_outline38" fill="none" stroke="none" d="M759.5000065043569,1401.499978967011h736a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-736a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text38" fill="black"><text id="kity_text_428" text-rendering="inherit" font-size="12" dy=".8em" y="1404.6999789401889" x="764.5000065043569">与hasOwnProperty(person,"name")配合使用：属性存在于实例中，hasOwnProperty()返回false；属性是原型中的属性，都返回true。</text></g></g><g id="minder_node40"><g id="node_expander39" style="cursor: pointer;" display="none"><path id="kity_path_447" fill="white" stroke="gray" d="M1044.500010587275,1475.4999799057841A6,6,0,1,1,1032.500010587275,1475.4999799057841A6,6,0,1,1,1044.500010587275,1475.4999799057841"></path><path id="kity_path_448" fill="none" stroke="gray"></path></g><path id="node_outline40" fill="none" stroke="none" d="M1049.5000108256936,1446.4999799057841h782a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-782a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text40" fill="black"><text id="kity_text_444" text-rendering="inherit" font-size="12" dy=".8em" y="1449.699979878962" x="1054.5000108256936">function Person(){ }&#xa0;</text><text id="kity_text_449" text-rendering="inherit" font-size="12" dy=".8em" y="1467.699979878962" x="1054.5000108256936"> </text><text id="kity_text_450" text-rendering="inherit" font-size="12" dy=".8em" y="1485.699979878962" x="1054.5000108256936">Person.prototype = {&#xa0; &#xa0; &#xa0;name : "Nicholas",&#xa0; &#xa0; &#xa0;age : 29,&#xa0; &#xa0; &#xa0;job: "Software Engineer",&#xa0; &#xa0; &#xa0;sayName : function () {&#xa0; &#xa0; &#xa0; &#xa0; &#xa0;alert(this.name);&#xa0; &#xa0; &#xa0;} };</text></g></g><g id="minder_node42" opacity="1"><g id="node_expander41" style="cursor: pointer;" display="none"><path id="kity_path_465" fill="white" stroke="gray" d="M1457.5000167414546,1559.4999811574817A6,6,0,1,1,1445.5000167414546,1559.4999811574817A6,6,0,1,1,1457.5000167414546,1559.4999811574817"></path><path id="kity_path_466" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="none" d="M1462.5000169798732,1521.4999811574817h517a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-517a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text42" fill="black"><text id="kity_text_462" text-rendering="inherit" font-size="12" dy=".8em" y="1524.6999811306596" x="1467.5000169798732">var friend = new Person();&#xa0;</text><text id="kity_text_467" text-rendering="inherit" font-size="12" dy=".8em" y="1542.6999811306596" x="1467.5000169798732"> </text><text id="kity_text_468" text-rendering="inherit" font-size="12" dy=".8em" y="1560.6999811306596" x="1467.5000169798732">alert(friend.constructor == Person);&#xa0; &#xa0; //false alert(friend.constructor == Object);&#xa0; &#xa0;//true&#xa0;</text><text id="kity_text_469" text-rendering="inherit" font-size="12" dy=".8em" y="1578.6999811306596" x="1467.5000169798732"> </text></g></g><g id="minder_node43" opacity="1"><g id="node_expander42" style="cursor: pointer;" display="none"><path id="kity_path_476" fill="white" stroke="gray" d="M1459.500016771257,1670.4999828115106A6,6,0,1,1,1447.500016771257,1670.4999828115106A6,6,0,1,1,1459.500016771257,1670.4999828115106"></path><path id="kity_path_477" fill="none" stroke="gray" d="M1449.000016771257,1670.4999828115106L1458.000016771257,1670.4999828115106"></path></g><path id="node_outline43" fill="none" stroke="none" d="M1464.5000170096755,1641.4999828115106h918a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-918a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text43" fill="black"><text id="kity_text_473" text-rendering="inherit" font-size="12" dy=".8em" y="1644.6999827846885" x="1469.5000170096755">function Person(){ }&#xa0;</text><text id="kity_text_502" text-rendering="inherit" font-size="12" dy=".8em" y="1662.6999827846885" x="1469.5000170096755"> </text><text id="kity_text_503" text-rendering="inherit" font-size="12" dy=".8em" y="1680.6999827846885" x="1469.5000170096755">Person.prototype = {&#xa0; &#xa0; &#xa0;constructor : Person,&#xa0; &#xa0; &#xa0;name : "Nicholas",&#xa0; &#xa0; &#xa0;age : 29,&#xa0; &#xa0; &#xa0;job: "Software Engineer",&#xa0; &#xa0; &#xa0;sayName : function () {&#xa0; &#xa0; &#xa0; &#xa0; &#xa0;alert(this.name);&#xa0; &#xa0; &#xa0;} };</text></g></g><g id="minder_node41" opacity="1"><g id="node_expander40" style="cursor: pointer;"><path id="kity_path_457" fill="white" stroke="gray" d="M1040.5000105276704,1635.49998228997A6,6,0,1,1,1028.5000105276704,1635.49998228997A6,6,0,1,1,1040.5000105276704,1635.49998228997"></path><path id="kity_path_458" fill="none" stroke="gray" d="M1030.0000105276704,1635.49998228997L1039.0000105276704,1635.49998228997"></path></g><path id="node_outline41" fill="none" stroke="none" d="M1045.500010766089,1624.49998228997h367a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-367a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text41" fill="black"><text id="kity_text_454" text-rendering="inherit" font-size="12" dy=".8em" y="1627.6999822631478" x="1050.500010766089">注意：此种方法的constructor指向Object，若有需求，需特殊之处</text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M774.4999957755208,2098.49998331815h179a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-179a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g><g id="minder_node177" opacity="1"><g id="node_expander176" style="cursor: pointer;" display="none"><path id="kity_path_1947" fill="white" stroke="gray" d="M704.5000055208802,1993.4999876245856A6,6,0,1,1,692.5000055208802,1993.4999876245856A6,6,0,1,1,704.5000055208802,1993.4999876245856"></path><path id="kity_path_1948" fill="none" stroke="gray"></path></g><path id="node_outline177" fill="none" stroke="none" d="M709.5000057592988,1928.4999876245856h584a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-584a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text177" fill="black"><text id="kity_text_1938" text-rendering="inherit" font-size="12" dy=".8em" y="1931.6999875977635" x="714.5000057592988">    function Person(name, age, job){ </text><text id="kity_text_1939" text-rendering="inherit" font-size="12" dy=".8em" y="1949.6999875977635" x="714.5000057592988">	    //属性     </text><text id="kity_text_1940" text-rendering="inherit" font-size="12" dy=".8em" y="1967.6999875977635" x="714.5000057592988">	    this.name = name;     this.age = age;     this.job = job;      </text><text id="kity_text_1941" text-rendering="inherit" font-size="12" dy=".8em" y="1985.6999875977635" x="714.5000057592988">	    //方法     </text><text id="kity_text_1942" text-rendering="inherit" font-size="12" dy=".8em" y="2003.6999875977635" x="714.5000057592988">	    if (typeof this.sayName != "function"){              Person.prototype.sayName = function(){             alert(this.name);         };              } } </text><text id="kity_text_1943" text-rendering="inherit" font-size="12" dy=".8em" y="2021.6999875977635" x="714.5000057592988"></text><text id="kity_text_1944" text-rendering="inherit" font-size="12" dy=".8em" y="2039.6999875977635" x="714.5000057592988">	var friend = new Person("Nicholas", 29, "Software Engineer"); friend.sayName(); </text></g></g></g></g></svg>